graph2ppt(x = figIntensity, file = '1', width = 2.5, height = 4, paper = "A4", orient = "portrait", center = TRUE, append = TRUE)
figIntensity
View(data)
PlotActPropsRg(df = data, y = "MedialMost", ylabel = bquote("Medial position "(mm)))
FigureActPropsEnrich(filePath3,'Enrich_limbMvt')
figIntensity
graph2ppt(x = figIntensity, file = '1', width = 2.5, height = 4, paper = "A4", orient = "portrait", center = TRUE, append = TRUE)
FigureActPropsEnrich(filePath4,'Enrich_limbVib')
graph2ppt(x = figIntensity, file = '1', width = 2.5, height = 4, paper = "A4", orient = "portrait", center = TRUE, append = TRUE)
library(tidyverse)
library(ggpubr)
library(ggsci)
library(rstatix)
library(ggh4x)
library(export)
library(ggeasy)
library(patchwork)
library(gridExtra)
library(scales)
library(ggrepel)
library(tidyverse)
library(ggpubr)
library(ggsci)
library(rstatix)
library(ggh4x)
library(export)
library(ggeasy)
library(patchwork)
library(gridExtra)
library(scales)
library(ggrepel
df <- read.csv("sensorimotor.csv")
library(tidyverse)
library(ggpubr)
library(ggsci)
library(rstatix)
library(ggh4x)
library(export)
library(ggeasy)
library(patchwork)
library(gridExtra)
library(scales)
library(ggrepel)
df <- read.csv("sensorimotor.csv")
View(df)
df %>%
filter(goodResp == 2) %>%
filter(!is.na(eightDirPD)) %>%
mutate(eightDirPD = factor(eightDirPD, levels = c(0, 45, 90, 135, 180, 225, 270, 315)))%>%
ggplot(aes(x = eightDirPD, fill = eightDirPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey")+
geom_bar(width =1) +
scale_x_discrete(drop = FALSE) +
geom_text(stat = "count", aes(label = stat(count), y = stat(count) + 1), vjust = -0.5) +
geom_text(stat = "count", aes(label = paste0(round(stat(count)/sum(stat(count))*100, 1), "%"), y = stat(count) + 1), vjust = 1.5) +
coord_polar(start = 4.35, direction = -1) +
theme_minimal() +
theme(legend.position = "none") +
labs(title = "Distribution of Eight Directional Preference S2376",
x = "Eight Directional Preference",
y = "Count") +
scale_y_continuous(limit = c(0, 58))
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45))
df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 1) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45))
df %>%
filter(goodResp == 2) %>%
filter(withinMotor == 1) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45))
df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 0 & withinMotor == 0) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr()
df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 0 & withinMotor == 0) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45))
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45))
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45)) +
theme_pubclean()
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45)) +
theme_pubclean()+
labs(title = "All neruons",
x = "Preferred Direction",
y = "Count")
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45)) +
theme_minimal()
p1 <- df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45)) +
theme_minimal() +
labs(title = "Distribution of preferred direction ALL",
x = "Preferred Direction",
y = "Count")
p2<-df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 1) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45)) +
theme_minimal() +
labs(title = "Distribution of preferred direction SENSORY",
x = "Preferred Direction",
y = "Count")
p3<-df %>%
filter(goodResp == 2) %>%
filter(withinMotor == 1) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45)) +
theme_minimal() +
labs(title = "Distribution of preferred direction MOTOR",
x = "Preferred Direction",
y = "Count")
p4<-df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 0 & withinMotor == 0) %>%
filter(!is.na(gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD > 360, gaussianPD - 360, gaussianPD)) %>%
mutate(gaussianPD = ifelse(gaussianPD < 0, gaussianPD + 360, gaussianPD)) %>%
ggplot(aes(x = gaussianPD)) +
geom_vline(aes(xintercept = gaussianPD), color = "grey") +
geom_histogram(aes(y = ..count..),breaks = seq(0, 360, 30), color = "black", fill = NA) +
coord_polar(start = 4.7, direction = -1) +
scale_x_continuous(breaks = seq(0, 360, 45)) +
theme_minimal() +
labs(title = "Distribution of preferred direction OTHER",
x = "Preferred Direction",
y = "Count")
grid.arrange(p1, p2, p3, p4, ncol = 2)
p <- p1|p2/p3|p4
p
p <- (p1|p2)/(p3|p4)
p
graph2ppt(p, "preferredDirection.pptx", width = 10, height = 7)
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr() +
labs(title = "Directional selectivity ALL",
x = "Directional selectivity",
y = "Count")
p1 <- df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr() +
labs(title = "Directional selectivity ALL",
x = "Directional selectivity",
y = "Count")
p2<-df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 1) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr() +
labs(title = "Directional selectivity SENSORY",
x = "Directional selectivity",
y = "Count")
p3<-df %>%
filter(goodResp == 2) %>%
filter(withinMotor == 1) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr() +
labs(title = "Directional selectivity MOTOR",
x = "Directional selectivity",
y = "Count")
p4<-df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 0 & withinMotor == 0) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr() +
labs(title = "Directional selectivity OTHER",
x = "Directional selectivity",
y = "Count")
p <- (p1|p2)/(p3|p4)
graph2ppt(p, "directionalSelectivity.pptx", width = 10, height = 7)
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
vline(xintercept = median(df$gaussianWidth, na.rm = TRUE), color = "red") +
theme_pubr() +
labs(title = "Directional selectivity ALL",
x = "Directional selectivity",
y = "Count")
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
geom_vline(xintercept = median(df$gaussianWidth, na.rm = TRUE), color = "red") +
theme_pubr() +
labs(title = "Directional selectivity ALL",
x = "Directional selectivity",
y = "Count")
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
geom_vline(xintercept = median(df$gaussianWidth, na.rm = TRUE), color = "red" =, label = paste("Median: ", round(median(df$gaussianWidth, na.rm = TRUE), 2))) +
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
geom_vline(xintercept = median(df$gaussianWidth, na.rm = TRUE), color = "red", label = paste("Median: ", round(median(df$gaussianWidth, na.rm = TRUE), 2))) +
theme_pubr() +
labs(title = "Directional selectivity ALL",
x = "Directional selectivity",
y = "Count")
df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 1) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
geom_vline(xintercept = median(df$gaussianWidth, na.rm = TRUE), color = "red") +
theme_pubr() +
labs(title = "Directional selectivity SENSORY",
x = "Directional selectivity",
y = "Count")
df %>%
filter(goodResp == 2) %>%
filter(withinMotor == 1) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
geom_vline(xintercept = median(df$gaussianWidth, na.rm = TRUE), color = "red") +
theme_pubr() +
labs(title = "Directional selectivity MOTOR",
x = "Directional selectivity",
y = "Count")
df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 0 & withinMotor == 0) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
geom_vline(xintercept = median(df$gaussianWidth, na.rm = TRUE), color = "red") +
theme_pubr() +
labs(title = "Directional selectivity OTHER",
x = "Directional selectivity",
y = "Count")
df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8, stat = "density") +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr() +
labs(title = "Directional selectivity ALL",
x = "Directional selectivity",
y = "Count")
p1 <- df %>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250))
theme_pubr() +
labs(title = "Directional selectivity ALL",
x = "Directional selectivity",
y = "Count")
p2<-df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 1) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr() +
labs(title = "Directional selectivity SENSORY",
x = "Directional selectivity",
y = "Count")
p3<-df %>%
filter(goodResp == 2) %>%
filter(withinMotor == 1) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr() +
labs(title = "Directional selectivity MOTOR",
x = "Directional selectivity",
y = "Count")
p4<-df %>%
filter(goodResp == 2) %>%
filter(withinSensory == 0 & withinMotor == 0) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(gaussianWidth = ifelse(gaussianWidth > 250, 250, gaussianWidth)) %>%
ggplot(aes(x = gaussianWidth, fill = gaussianWidth)) +
geom_bar(width = 0.8) +
scale_x_binned(breaks = seq(0, 360, 10), limits = c(0, 250)) +
theme_pubr() +
labs(title = "Directional selectivity OTHER",
x = "Directional selectivity",
y = "Count")
p <- (p1|p2)/(p3|p4)
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, y = gaussianPD, color = region)) +
geom_histogram()
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density()
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density() +
ggplot(aes(x = gaussianWidth) +
geom_density()
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density() +
ggplot(aes(x = gaussianWidth) +
geom_density()
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density() +
geom_density(aes(x = gaussianWidth))
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density() +
geom_density(aes(x = gaussianWidth), color = "black")
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density(lw = 2) +
geom_density(aes(x = gaussianWidth), color = "black")
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density(size = 2) +
geom_density(aes(x = gaussianWidth), color = "black")
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density(size = 1) +
geom_density(aes(x = gaussianWidth), color = "black", size = 1)
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region, linetype = region)) +
geom_density(size = 1, ) +
geom_density(aes(x = gaussianWidth), color = "black", size = 1)
df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density(size = 1, ) +
geom_density(aes(x = gaussianWidth), color = "black", size = 1)
p<-df%>%
filter(goodResp == 2) %>%
filter(!is.na(gaussianWidth)) %>%
mutate(region = ifelse(withinSensory == 1, "Sensory", ifelse(withinMotor == 1, "Motor", "Other"))) %>%
ggplot(aes(x = gaussianWidth, color = region)) +
geom_density(size = 1, ) +
geom_density(aes(x = gaussianWidth), color = "black", size = 1)
graph2ppt(p, "directionalSelectivityDensity.pptx", width = 10, height = 7)
